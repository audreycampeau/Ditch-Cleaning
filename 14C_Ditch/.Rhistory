Chemistry$Date=as.Date(Chemistry$Date)
# Alkalinity
Chemistry$Alk_mgL=Chemistry$DIC_mgL_MW - Chemistry$CO2_mgL_MW
# (Ca+Mg)/Alk (like in Marcus' Klaus Paper on GW)
Chemistry$Ca_Mg_Alk=((Chemistry$Ca_ugL/40.078) + (Chemistry$Mg_ugL/24.3050)) / (Chemistry$Alk_mgL/12.01)
#OrgN
Chemistry$Norg_mgL=Chemistry$DN_mgL - ((Chemistry$NO2_NO3_ugL+Chemistry$NH4_ugL)/1000)
#C:N (org)
Chemistry$C_N_org=(Chemistry$Norg_mgL/14.01 )/(Chemistry$DOC_mgL/12.01)
#Na:Mg
Chemistry$Na_Mg=(Chemistry$Na_ugL/22.989770)/(Chemistry$Mg_ugL/24.3050)
C14_wide_chemistry= full_join(C14_wide,
Chemistry,
by=join_by("Site_id",
closest(Date>=Date)),
suffix = c("", "_chem"))
C14_wide_chemistry$Date_chem=as.Date(C14_wide_chemistry$Date_chem)
C14_wide_chemistry$Date_chem_chem=as.Date(C14_wide_chemistry$Date_chem_chem)
C14_wide_chemistry$Date <- as.Date(ifelse(is.na(C14_wide_chemistry$Date),
C14_wide_chemistry$Date_chem_chem,
C14_wide_chemistry$Date))
ggplot(C14_wide_chemistry, aes(x=DIC_mgL_MW, y=DIC_mgL))+
geom_point()
ggplot(C14_wide_chemistry, aes(x=DIC_mgL_MW, y=DIC_mgL_chem))+
geom_point()
ggplot(C14_wide_chemistry, aes(x=DIC_mgL_MW, y=DIC_mgL_chem))+
geom_point()+
geom_abline(intercept=0, slope=1)
ggplot(C14_wide_chemistry, aes(x=DIC_mgL_MW, y=DIC_mgL))+
geom_point()+
geom_abline(intercept=0, slope=1)
#Merge CO2
C14_wide_chemistry$CO2_mgL=ifelse(is.na(C14_wide_chemistry$CO2_mgL), C14_wide_chemistry$CO2_mgL_chem, C14_wide_chemistry$CO2_mgL)
C14_wide_chemistry$CO2_mgL=ifelse(is.na(C14_wide_chemistry$CO2_mgL), C14_wide_chemistry$CO2_mgL_MW, C14_wide_chemistry$CO2_mgL)
#Merge pH
C14_wide_chemistry$pH=ifelse(is.na(C14_wide_chemistry$pH), C14_wide_chemistry$pH_chem, C14_wide_chemistry$pH)
C14_wide_chemistry$pH=ifelse(is.na(C14_wide_chemistry$pH), C14_wide_chemistry$pH_MW, C14_wide_chemistry$pH)
#Merge Conductivity
C14_wide_chemistry$Cond_uScm=ifelse(is.na(C14_wide_chemistry$Cond_uScm), C14_wide_chemistry$EC_uScm, C14_wide_chemistry$Cond_uScm)
#Merge DOC
C14_wide_chemistry$DOC_mgL=ifelse(is.na(C14_wide_chemistry$DOC_mgL), C14_wide_chemistry$DOC_mgL_chem, C14_wide_chemistry$DOC_mgL)
C14_wide_chemistry$DOC_mgL=ifelse(is.na(C14_wide_chemistry$DOC_mgL), C14_wide_chemistry$DOCmgL_14C_DOC, C14_wide_chemistry$DOC_mgL) # Merge DOC from 14C analysis too
#Merge NO2_NO3
C14_wide_chemistry$NO2_NO3_ugL=ifelse(is.na(C14_wide_chemistry$NO2_NO3_ugL), C14_wide_chemistry$NO2_NO3_ugL_chem, C14_wide_chemistry$NO2_NO3_ugL)
#Merge DN
C14_wide_chemistry$DN_mgL=ifelse(is.na(C14_wide_chemistry$DN_mgL), C14_wide_chemistry$DN_mgL_chem, C14_wide_chemistry$DN_mgL)
#Merge NH4
C14_wide_chemistry$NH4_ugL=ifelse(is.na(C14_wide_chemistry$NH4_ugL), C14_wide_chemistry$NH4_ugL_chem, C14_wide_chemistry$NH4_ugL)
#Merge PO4
C14_wide_chemistry$PO4_ugL=ifelse(is.na(C14_wide_chemistry$PO4_ugL), C14_wide_chemistry$PO4_ugL_chem, C14_wide_chemistry$PO4_ugL)
#Merge SO4
C14_wide_chemistry$SO4_ugL=ifelse(is.na(C14_wide_chemistry$SO4_ugL), C14_wide_chemistry$SO4_ugL_chem, C14_wide_chemistry$SO4_ugL)
#Merge Fe
C14_wide_chemistry$Fe_ugL=ifelse(is.na(C14_wide_chemistry$Fe_ugL), C14_wide_chemistry$Fe_ugL_chem, C14_wide_chemistry$Fe_ugL)
#Merge d18O
C14_wide_chemistry$d18O=ifelse(is.na(C14_wide_chemistry$d18O), C14_wide_chemistry$d18O_chem, C14_wide_chemistry$d18O)
#Merge DIC
C14_wide_chemistry$DIC_mgL=ifelse(is.na(C14_wide_chemistry$DIC_mgL), C14_wide_chemistry$DIC_mgL_chem, C14_wide_chemistry$DIC_mgL)
C14_wide_chemistry$DIC_mgL=ifelse(is.na(C14_wide_chemistry$DIC_mgL), C14_wide_chemistry$DIC_mgL_MW, C14_wide_chemistry$DIC_mgL)
#Merge pCO2
C14_wide_chemistry$pCO2_uatm=ifelse(is.na(C14_wide_chemistry$pCO2_uatm), C14_wide_chemistry$pCO2_uatm_chem, C14_wide_chemistry$pCO2_uatm)
#Merge CH4_
C14_wide_chemistry$CH4_ugL=ifelse(is.na(C14_wide_chemistry$CH4_ugL), C14_wide_chemistry$CH4_ugL_chem, C14_wide_chemistry$CH4_ugL)
C14_wide_chemistry$CH4_ugL=ifelse(is.na(C14_wide_chemistry$CH4_ugL), C14_wide_chemistry$CH4_ugL_MW, C14_wide_chemistry$CH4_ugL)
# Drop columns from _chem and _MW that I no longer need
C14_wide_chemistry_clean <- C14_wide_chemistry %>% select(-CO2_mgL_chem, -CO2_mgL_MW,
-pH_chem, -pH_MW,
-EC_uScm,
-DOC_mgL_chem,
-NO2_NO3_ugL_chem,
-DN_mgL_chem,
-NH4_ugL_chem,
-PO4_ugL_chem,
-SO4_ugL_chem,
-Fe_ugL_chem,
-d18O_chem,
-DIC_mgL_chem, -DIC_mgL_MW,
-pCO2_uatm_chem,
-CH4_ugL_chem, -CH4_ugL_MW,
-X, -Date_chem_chem, -Date_MW
)
print(tibble(colnames(C14_wide_chemistry_clean)), n=70)
# Check for complete duplicates across all columns
complete_duplicates = C14_wide_chemistry_clean[duplicated(C14_wide_chemistry_clean), ]
# Check for duplicates based on Site_id and Date only
key_duplicates = C14_wide_chemistry_clean[duplicated(C14_wide_chemistry_clean[, c("Publication Code_DOC")]) |
duplicated(C14_wide_chemistry_clean[, c("Publication Code_DOC")], fromLast = TRUE), ]
key_duplicates[, c("n", "Publication Code_DOC", "DOC_14C_Modern")]
row_to_delete = key_duplicates$n #get row id for all duplicated rows
row_to_delete=row_to_delete[seq(2, length(row_to_delete), 2)] #get row id for every second row
C14_wide_chemistry_clean=C14_wide_chemistry_clean[-c(row_to_delete[1:3]),]
saveRDS(C14_wide_chemistry_clean, "Output/Data/C14_wide_chemistry.rds")
# Open Water balance, Discharge data
#Data Source: Johannes Tiwari (Sent by Alberto in April 2024)
#Q units are most likely L s-1
Q_DC4=read.csv("Input/Q and Meteo/Q_59_daily.Time_Series_Data.2024031816491438.csv", skip=11)
Q_DC2=read.csv("Input/Q and Meteo/Q_C57_Daily.Time_Series_Data.2024031816461304.csv", skip=11)
Q_DC3=read.csv("Input/Q and Meteo/Q_60_daily.Time_Series_Data.2024031816502188.csv", skip=11)
Q_C1=read.csv("Input/Q and Meteo/Q_C01_Daily_PRELIMINARY.Time_Series_Data.2024031816562806.csv", skip=11)
#Data Source: SITES data Portal (retreived in April 2024)
#Q units are m3 s1 (from Sites Data Portal)
Q_C2=read.csv("Input/Q and Meteo/SITES_WB-Q_SVB-VAB-C2_20050406-20231116_daily.csv", skip=24)
Q_C4=read.csv("Input/Q and Meteo/SITES_WB-Q_SVB_KKM-C4_20070529-20231113_L2_daily.csv", skip=23)
Q_C18=read.csv("Input/Q and Meteo/SITES_WB-Q_SVB_DEG-C18_20120425-20231123_L2_daily.csv", skip=22)
#Format Dates
Q_DC4$Date=as.Date(Q_DC4$TimeStamp)
Q_DC2$Date=as.Date(Q_DC2$TimeStamp)
Q_DC3$Date=as.Date(Q_DC3$TimeStamp)
Q_C1$Date=as.Date(Q_C1$TimeStamp)
Q_C2$Date=as.Date(Q_C2$TIMESTAMP)
Q_C4$Date=as.Date(Q_C4$TIMESTAMP)
Q_C18$Date=as.Date(Q_C18$TIMESTAMP)
#Convert all Q measurements to m3/d
Q_DC4$Q_m3d=Q_DC4$Q/1000*60*60*24
Q_DC2$Q_m3d=Q_DC2$Q/1000*60*60*24
Q_DC3$Q_m3d=Q_DC3$Q/1000*60*60*24
Q_C1$Q_m3d=Q_C1$Q/1000*60*60*24
Q_C2$Q_m3d=Q_C2$Q*60*60*24
Q_C4$Q_m3d=Q_C4$Q*60*60*24
Q_C18$Q_m3d=Q_C18$Q*60*60*24
#Catchment Area in m2 (originally in ha)
C2_Area_m2=12*10000
C1_Area_m2=48*10000
C4_Area_m2=18*10000
C18_Area_m2=650*10000
DC1_Area_m2=6.7*10000
DC2_Area_m2=4.4*10000
DC3_Area_m2=8.4*10000
DC4_Area_m2=10.7*10000
#Convert all Q measurements to Specific Discharge m/d
Q_DC4$q_md=Q_DC4$Q_m3d/DC4_Area_m2
Q_DC2$q_md=Q_DC2$Q_m3d/DC2_Area_m2
Q_DC3$q_md=Q_DC3$Q_m3d/DC3_Area_m2
#Q_DC1$q_md=Q_DC1$Q_m3d/DC1_Area_m2
Q_C1$q_md=Q_C1$Q_m3d/C1_Area_m2
Q_C2$q_md=Q_C2$Q_m3d/C2_Area_m2
Q_C4$q_md=Q_C4$Q_m3d/C4_Area_m2
Q_C18$q_md=Q_C18$Q_m3d/C18_Area_m2
#Open Meteo Daily
Meteo=read_xlsx("Input/Q and Meteo/Meteo_Daily.xlsx")
Meteo$Date=as.Date(Meteo$TimeStamp)
plot(y=Meteo$P,Meteo$TimeStamp, type="l")
# Add meteo data to Q_DC3
Q_DC3_Meteo=left_join(Q_DC3, Meteo, by = 'Date')
# Timeseries of Q in all sites
ggplot()+
geom_line(data=Q_DC2, aes(x=Date, y=q_md), color=2)+
geom_line(data=Q_DC4, aes(x=Date, y=q_md), color=3)+
geom_line(data=Q_DC3, aes(x=Date, y=q_md), color=4)+
geom_line(data=Q_C1, aes(x=Date, y=q_md), color=5)+
geom_line(data=Q_C2, aes(x=Date, y=q_md))+
geom_line(data=Q_C4, aes(x=Date, y=q_md), color=6)+
geom_line(data=Q_C18, aes(x=Date, y=q_md), color=7)+
scale_x_date(limits= c(as.Date("2020-01-01"), as.Date("2023-12-31")))
#________________________________________________________________________________________
#________________________________________________________________________________________
#________________________________________________________________________________________
#Open dataset
C14_wide_chemistry_clean <- readRDS(file = "Output/Data/C14_wide_chemistry.rds")
colnames(C14_wide_chemistry_clean)[4]="Date"
#________________________________________________________________________________________
# Join databases
#________________________________________________________________________________________
C2= full_join(Q_C2[,3:5],
filter(C14_wide_chemistry_clean, Site_id == "C2"),
by=join_by("Date"),
suffix = c(" ", " "))
C4= full_join(Q_C4[,3:5],
filter(C14_wide_chemistry_clean, Site_id == "C4"),
by=join_by("Date"),
suffix = c(" ", " "))
C18= full_join(Q_C18[,3:5],
filter(C14_wide_chemistry_clean, Site_id == "C18"),
by=join_by("Date"),
suffix = c(" ", " "))
C1= full_join(Q_C1[,3:5],
filter(C14_wide_chemistry_clean, Site_id == "C1"),
by=join_by("Date"),
suffix = c(" ", " "))
DC2= full_join(Q_DC3_Meteo[,c(3:5,12)],# Merge with Q data from DC3
filter(C14_wide_chemistry_clean, Site_id == "DC2"),
by=join_by("Date"),
suffix = c(" ", " "))
DC2$Site_id=rep("DC2", nrow(DC2))
DC3= full_join(Q_DC3_Meteo[,c(3:5,12)],
filter(C14_wide_chemistry_clean, Site_id == "DC3"),
by=join_by("Date"),
suffix = c(" ", " "))
DC3$Site_id=rep("DC3", nrow(DC3))
DC4= full_join(Q_DC3_Meteo[,c(3:5,12)], # Merge with Q data from DC3
filter(C14_wide_chemistry_clean, Site_id == "DC4"),
by=join_by("Date"),
suffix = c(" ", " "))
DC4$Site_id=rep("DC4", nrow(DC4))
DC1= full_join(Q_DC3_Meteo[,c(3:5,12)], # Merge with Q data from DC3
filter(C14_wide_chemistry_clean, Site_id == "DC1"),
by=join_by("Date"),
suffix = c(" ", " "))
DC1$Site_id=rep("DC1", nrow(DC1))
# Here is the information provided by Alberto on April 15th 2024
#concerning the dates of clearcut and ditch cleaning for different sites
#Here are the periods of time when the operations occurred:
#DC sites – clear cuts – depends on the catchment, Start 20 July 2020 - End 24 August 2020 (but wood was stacked on the road, so some trucks were visiting the site for at least one more month;
#(+ Site preparation - July 6, 2021 (maybe one day before/after))
#DC sites – ditch cleaning - 9:00am on the 20th of September, 2021, typically worked from 8:00-17:00 until the 22nd or 23rd.
#Given this, we started counting the treatments as when they were completed. Here are the reference dates:
#DC – clearcut – 25 August 2020
#DC ditch cleaning – 23 September 2021 (but the “during” effects of this could be big..)
#Make a treatment categorical variable
library(dplyr)
#Create a new variable called Treatment
range(DC1$Date, na.rm=T)
#range of dates "2018-12-18" "2023-10-25"
DC1=DC1 %>%
mutate(Treatment = case_when(
between(Date, as.Date("2018-12-18"), as.Date("2020-08-24")) ~ "Pristine",
between(Date, as.Date("2020-08-25"), as.Date("2021-09-22")) ~ "Clearcut",
between(Date, as.Date("2021-09-23"), as.Date("2023-10-25")) ~ "Ditch cleaning"
))
DC3=DC3 %>%
mutate(Treatment = case_when(
between(Date, as.Date("2018-12-18"), as.Date("2020-08-24")) ~ "Pristine",
between(Date, as.Date("2020-08-25"), as.Date("2021-09-22")) ~ "Clearcut",
between(Date, as.Date("2021-09-23"), as.Date("2023-10-25")) ~ "Ditch cleaning"
))
DC2=DC2 %>%
mutate(Treatment = case_when(
between(Date, as.Date("2018-12-18"), as.Date("2020-08-24")) ~ "Pristine",
between(Date, as.Date("2020-08-25"), as.Date("2023-10-25")) ~ "Clearcut"
# No Ditch cleaning
))
DC4 =DC4 %>%
mutate(Treatment = case_when(
between(Date, as.Date("2018-12-18"), as.Date("2020-08-24")) ~ "Pristine",
between(Date, as.Date("2020-08-25"), as.Date("2023-10-25")) ~ "Clearcut"
# No Ditch cleaning
))
DC_Q=rbind(DC1, DC2, DC3, DC4)
DC_Q$Site_id=as.factor(DC_Q$Site_id)
DC_Q$Treatment=as.factor(DC_Q$Treatment)
#Order factors
DC_Q$Treatment <- factor(DC_Q$Treatment, #reorder the treatment types
levels = c("Pristine", "Clearcut", "Ditch cleaning"))
saveRDS(DC_Q, "Output/Data/DC_Q.rds")
# Create color ramp and symbols
treatments_colors <- c(
"Pristine" = "deepskyblue",     # light blue
"Clearcut" = "#fc9272ff",     # light red
"Ditch cleaning" = "#de2d26ff" # dark red
)
treatments_colors2 <- c(
"Pristine" = "deepskyblue", #"#88CCEE",     # light blue
"Clearcut" = "#CC6677",     # light red
"Ditch cleaning" = "#882255" # dark red
)
site_colors <- c(
"DC1"= "#2E5894", #Dark blue
"DC2"= "#E69B00", # Light orange
"DC3"= "#7EA6E0", #Light blue
"DC4"= "#994F00") #Dark brown
treatments_symbols <- c(
"Pristine" = 21,
"Clearcut" = 23,
"Ditch cleaning" = 24
)
sites_symbols <- c(
"DC1" = 21,
"DC2" = 3,
"DC3" = 22,
"DC4" =4
)
ggplot( filter(DC_Q, Treatment %in% c("Ditch cleaning","Clearcut", "Pristine" )),# %>%
aes(y=CO2_14C_Modern, x=DIC_mgL*q_md, fill=Treatment, color=Treatment))+ #size=DOCmgL_14C,
geom_point(aes(shape=Site_id), size=3)+ #
scale_shape_manual(values=sites_symbols)+
scale_fill_manual(values=treatments_colors)+ #"
#labs(x="CO2 (mgCL)", y=bquote("∆"^14*"C-CO2  (% modern)"), shape="Watershed ID")+
#scale_x_continuous(limits=c(0,0.025))+
#facet_wrap(~Site_id)+
geom_smooth(method="lm", se=F, aes(color=Treatment), show.legend = F)+
scale_color_manual(values=treatments_colors)+ #"
stat_regline_equation(
label.y.npc = "top", label.x.npc = 0.7,
aes(label =  paste(..eq.label.., ..adj.rr.label.., sep = "~~~~"), color = Treatment),
show.legend = F, size=4)+
theme(legend.position = "right")
ggplot( filter(DC_Q, Treatment %in% c("Ditch cleaning","Clearcut", "Pristine" )),# %>%
aes(y=CO2_14C_Modern, x=CO2_mgL*q_md, fill=Treatment, color=Treatment))+ #size=DOCmgL_14C,
geom_point(aes(shape=Site_id), size=3)+ #
scale_shape_manual(values=sites_symbols)+
scale_fill_manual(values=treatments_colors)+ #"
#labs(x="CO2 (mgCL)", y=bquote("∆"^14*"C-CO2  (% modern)"), shape="Watershed ID")+
#scale_x_continuous(limits=c(0,0.025))+
#facet_wrap(~Site_id)+
geom_smooth(method="lm", se=F, aes(color=Treatment), show.legend = F)+
scale_color_manual(values=treatments_colors)+ #"
stat_regline_equation(
label.y.npc = "top", label.x.npc = 0.7,
aes(label =  paste(..eq.label.., ..adj.rr.label.., sep = "~~~~"), color = Treatment),
show.legend = F, size=4)+
theme(legend.position = "right")
ggplot( filter(DC_Q, Treatment %in% c("Ditch cleaning","Clearcut", "Pristine" )),# %>%
aes(y=CO2_14C_Modern, x=CO2_mgL*q_md, fill=Treatment, color=Treatment))+ #size=DOCmgL_14C,
geom_point(aes(shape=Site_id), size=3)+ #
scale_shape_manual(values=sites_symbols)+
scale_fill_manual(values=treatments_colors)+ #"
#labs(x="CO2 (mgCL)", y=bquote("∆"^14*"C-CO2  (% modern)"), shape="Watershed ID")+
#scale_x_continuous(limits=c(0,0.025))+
#facet_wrap(~Site_id)+
geom_smooth(method="lm", se=F, aes(color=Treatment), show.legend = F)+
scale_color_manual(values=treatments_colors)+ #"
stat_regline_equation(
label.y.npc = "top", label.x.npc = 0.5,
aes(label =  paste(..eq.label.., ..adj.rr.label.., sep = "~~~~"), color = Treatment),
show.legend = F, size=4)+
theme(legend.position = "right")
ggplot( filter(DC_Q, Treatment %in% c("Ditch cleaning","Clearcut", "Pristine" )),# %>%
aes(y=DOC_14C_Modern, x=DOC_mgL*q_md, fill=Treatment, color=Treatment))+ #size=DOCmgL_14C,
geom_point(aes(shape=Site_id), size=3)+ #
scale_shape_manual(values=sites_symbols)+
scale_fill_manual(values=treatments_colors)+ #"
#labs(x="CO2 (mgCL)", y=bquote("∆"^14*"C-CO2  (% modern)"), shape="Watershed ID")+
#scale_x_continuous(limits=c(0,0.025))+
#facet_wrap(~Site_id)+
geom_smooth(method="lm", se=F, aes(color=Treatment), show.legend = F)+
scale_color_manual(values=treatments_colors)+ #"
stat_regline_equation(
label.y.npc = "top", label.x.npc = 0.5,
aes(label =  paste(..eq.label.., ..adj.rr.label.., sep = "~~~~"), color = Treatment),
show.legend = F, size=4)+
theme(legend.position = "right")
ggplot( filter(DC_Q, Treatment %in% c("Ditch cleaning","Clearcut", "Pristine" )),# %>%
aes(y=DOC_14C_Modern, x=DOC_mgL*q_md, fill=Treatment, color=Treatment))+ #size=DOCmgL_14C,
geom_point(aes(shape=Site_id), size=3)+ #
scale_shape_manual(values=sites_symbols)+
scale_fill_manual(values=treatments_colors)+ #"
#labs(x="CO2 (mgCL)", y=bquote("∆"^14*"C-CO2  (% modern)"), shape="Watershed ID")+
#scale_x_continuous(limits=c(0,0.025))+
#facet_wrap(~Site_id)+
geom_smooth(method="lm", se=F, aes(color=Treatment), show.legend = F)+
scale_color_manual(values=treatments_colors)+ #"
stat_regline_equation(
label.y.npc = "bottom", label.x.npc = 0.5,
aes(label =  paste(..eq.label.., ..adj.rr.label.., sep = "~~~~"), color = Treatment),
show.legend = F, size=4)+
theme(legend.position = "right")
#Run ANCOVA test
filter(DC_Q, Treatment %in% c("Ditch cleaning","Clearcut", "Pristine" )) %>%
anova_test(CO2_14C_Modern ~ (CO2_mgL*q_md)*Treatment)
ggplot(filter(DC_Q, Treatment %in% c("Ditch cleaning","Clearcut", "Pristine" )),
aes(fill=Treatment,
y=DOC_14C_Modern-CO2_14C_Modern,
x=Treatment))+
geom_violin(alpha=0.5)+
geom_jitter(aes(shape=Site_id), width=0.2, size=3) +
#geom_dotplot(binaxis = "y", stackdir = "center", binwidth = 0.3)+
scale_fill_manual(values=c(treatments_colors))+
scale_shape_manual(values=sites_symbols)+
facet_wrap(~Carbon_specie, scales = "fixed")+
ggtitle("Change in 14C-content across treatments")+
theme_bw(base_size = 12)
ggplot(filter(DC_Q, Treatment %in% c("Ditch cleaning","Clearcut", "Pristine" )),
aes(fill=Treatment,
y=DOC_14C_Modern-CO2_14C_Modern,
x=Treatment))+
geom_violin(alpha=0.5)+
geom_jitter(aes(shape=Site_id), width=0.2, size=3) +
#geom_dotplot(binaxis = "y", stackdir = "center", binwidth = 0.3)+
scale_fill_manual(values=c(treatments_colors))+
scale_shape_manual(values=sites_symbols)+
#facet_wrap(~Carbon_specie, scales = "fixed")+
ggtitle("Change in 14C-content across treatments")+
theme_bw(base_size = 12)
# Define Color Ramp and theme
treatments_colors <- c(
"Pristine" = "deepskyblue",     # light blue
"Clearcut" = "#CC6677",     # light red
"Ditch cleaning" = "#882255" # dark red
)
treatments_symbols <- c(
"Pristine" = 21,
"Clearcut" = 23,
"Ditch cleaning" = 24
)
site_colors <- c(
"DC1"= "#2E5894", #Dark blue
"DC2"= "#E69B00", # Light orange
"DC3"= "#7EA6E0", #Light blue
"DC4"= "#994F00") #Dark brown
sites_symbols <- c(
"DC1" = 21,
"DC2" = 3,
"DC3" = 22,
"DC4" =4
)
theme_set(theme_bw(base_size = 16))
#Present the dataset with interactivitiy
datatable(filter(DC_Q, !is.na(DOC_14C_Modern)), options = list(pageLength = 5), filter="top") %>%
formatStyle(columns = colnames(.$x$data), `font-size` = '10px')
#Present the dataset with interactivitiy
datatable(filter(DC_Q, !is.na(DOC_14C_Modern)), options = list(pageLength = 5), filter="top") %>%
formatStyle(columns = colnames(.$x$data), `font-size` = '10px')
#Present the dataset with interactivitiy
datatable(filter(DC_Q, !is.na(DOC_14C_Modern)), options = list(pageLength = 5), filter="top") %>%
formatStyle(columns = colnames(.$x$data), `font-size` = '10px')
```{r, warning=FALSE, message=F}
ggplot(filter(DC_Q, Treatment %in% c("Ditch cleaning","Clearcut", "Pristine" )),
aes(fill=Treatment,
y=DOC_14C_Modern-CO2_14C_Modern,
x=Treatment))+
geom_violin(alpha=0.5)+
geom_jitter(aes(shape=Site_id), width=0.2, size=3) +
#geom_dotplot(binaxis = "y", stackdir = "center", binwidth = 0.3)+
scale_fill_manual(values=c(treatments_colors))+
scale_shape_manual(values=sites_symbols)+
#facet_wrap(~Carbon_specie, scales = "fixed")+
ggtitle("Change in 14C-content across treatments")+
theme_bw(base_size = 12)
ggplot(filter(DC_Q, Treatment %in% c("Ditch cleaning","Clearcut", "Pristine" )),
aes(fill=Treatment,
y=DOC_14C_Modern-CO2_14C_Modern,
x=Treatment))+
geom_violin(alpha=0.5)+
geom_jitter(aes(shape=Site_id), width=0.2, size=3) +
#geom_dotplot(binaxis = "y", stackdir = "center", binwidth = 0.3)+
scale_fill_manual(values=c(treatments_colors))+
scale_shape_manual(values=sites_symbols)+
#facet_wrap(~Carbon_specie, scales = "fixed")+
ggtitle("No change in 14C-gap between CO2 and DOC with treatments")+
theme_bw(base_size = 12)
#Make dotplot (treatment effect)
ggplot(filter(DC_Q, Treatment %in% c("Ditch cleaning","Clearcut", "Pristine" )) %>%
pivot_longer(
cols = c(CO2_14C_Modern, DOC_14C_Modern),
names_to = "Carbon_specie",
values_to = "C14_value"
),
aes(fill=Treatment, y=C14_value, x=Treatment))+
geom_violin(alpha=0.5)+
geom_jitter(aes(shape=Site_id), width=0.2, size=3) +
#geom_dotplot(binaxis = "y", stackdir = "center", binwidth = 0.3)+
scale_fill_manual(values=c(treatments_colors))+
scale_shape_manual(values=sites_symbols)+
facet_wrap(~Carbon_specie, scales = "fixed")+
ggtitle("Change in 14C-content across treatments")+
theme_bw(base_size = 12)
#Make dotplot (site effect)
ggplot(filter(DC_Q, Treatment %in% c("Ditch cleaning","Clearcut", "Pristine" )) %>%
pivot_longer(
cols = c(CO2_14C_Modern, DOC_14C_Modern),
names_to = "Carbon_specie",
values_to = "C14_value"
),
aes(fill=Site_id, y=C14_value, x=Site_id))+
geom_violin(alpha=0.5)+
#geom_dotplot(binaxis = "y", stackdir = "center", binwidth = 0.3)+
geom_jitter(aes(shape=Treatment), width=0.2, size=3) +
scale_fill_manual(values=c(site_colors))+
scale_shape_manual(values=treatments_symbols)+
facet_grid(#cols=vars(Treatment),
rows=vars(Carbon_specie), scales = "fixed")+
labs(fill="Watershed ID", y=bquote("∆"^14*"C  (% modern)"), x="Watershed ID")+
ggtitle("14C-content is similar across sites")+
theme_bw(base_size = 12)
rows=vars(Carbon_specie), scales = "fixed")+
#Make dotplot (site effect)
ggplot(filter(DC_Q, Treatment %in% c("Ditch cleaning","Clearcut", "Pristine" )) %>%
pivot_longer(
cols = c(CO2_14C_Modern, DOC_14C_Modern),
names_to = "Carbon_specie",
values_to = "C14_value"
),
aes(fill=Site_id, y=C14_value, x=Site_id))+
geom_violin(alpha=0.5)+
#geom_dotplot(binaxis = "y", stackdir = "center", binwidth = 0.3)+
geom_jitter(aes(shape=Treatment), width=0.2, size=3) +
scale_fill_manual(values=c(site_colors))+
scale_shape_manual(values=treatments_symbols)+
facet_grid(#cols=vars(Treatment),
rows=vars(Carbon_specie), scales = "fixed")+
labs(fill="Watershed ID", y=bquote("∆"^14*"C  (% modern)"), x="Watershed ID")+
ggtitle("14C-content is similar across sites")+
theme_bw(base_size = 12)
# Convert data to long format for plotting
C14_DC_long <- filter(DC_Q, Site_id %in% c("DC1","DC2", "DC3", "DC4" )) %>%
pivot_longer(
cols = c(CO2_14C_Modern, DOC_14C_Modern),
names_to = "Carbon_specie",
values_to = "C14_value"
)
C14_DC_long$Carbon_specie=recode(C14_DC_long$Carbon_specie, CO2_14C_Modern = "CO2", DOC_14C_Modern="DOC") #Rename the CO2 and DOC fields
C14_DC_long$Treatment <- factor(C14_DC_long$Treatment, #reorder the treatment types
levels = c("Pristine", "Clearcut", "Ditch cleaning"))
# Create the plot
ggplot(filter(C14_DC_long, !is.na(Treatment)) , aes(x = Carbon_specie, y = C14_value,
group = interaction(row_id, Treatment),
fill = Treatment)) +
geom_line(alpha = 0.6) +
geom_point(#aes(shape=Site_id),
size=3, shape=21) +
facet_grid(rows=vars(Site_id), cols=vars(Treatment), scales = "fixed") +
scale_fill_manual(values = c(treatments_colors)) +
#scale_shape_manual(values = c(21))+
labs(x = "Carbon Species",
y = "14C Content",
color = "Treatment") +
theme_cleveland() +
theme(
panel.grid.minor = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "top"
)
